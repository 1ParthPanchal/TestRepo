// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharm_Easy_Models;

namespace Pharm_Easy_Models.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220809112548_PharmEasy")]
    partial class PharmEasy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Pharm_Easy_Models.CArticle", b =>
                {
                    b.Property<int>("A_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("A_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("A_Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_Id");

                    b.ToTable("cArticles");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Cart", b =>
                {
                    b.Property<int>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Off_Id1")
                        .HasColumnType("int");

                    b.Property<int?>("o_quantityo_Id")
                        .HasColumnType("int");

                    b.HasKey("C_Id");

                    b.HasIndex("Off_Id1");

                    b.HasIndex("o_quantityo_Id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Catagories", b =>
                {
                    b.Property<int>("Cat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cat_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cat_Id");

                    b.ToTable("catagories");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Categories", b =>
                {
                    b.Property<int>("Cat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cat_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cat_Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Pharm_Easy_Models.DisplayDetails", b =>
                {
                    b.Property<string>("Full_Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Display_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.HasKey("Full_Name");

                    b.ToTable("displayDetails");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Offers", b =>
                {
                    b.Property<int>("Off_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Off_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Off_Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Off_Id");

                    b.ToTable("offers");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Order", b =>
                {
                    b.Property<int>("o_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Off_Id1")
                        .HasColumnType("int");

                    b.Property<int?>("Pr_Id1")
                        .HasColumnType("int");

                    b.Property<string>("o_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("o_quantity")
                        .HasColumnType("int");

                    b.HasKey("o_Id");

                    b.HasIndex("Off_Id1");

                    b.HasIndex("Pr_Id1");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Product", b =>
                {
                    b.Property<int>("Pr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Cat_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Pr_Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pr_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pr_Price")
                        .HasColumnType("int");

                    b.HasKey("Pr_Id");

                    b.HasIndex("Cat_Id1");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Pharm_Easy_Models.SProduct", b =>
                {
                    b.Property<int>("Pr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cat_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Pr_Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pr_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pr_Price")
                        .HasColumnType("int");

                    b.HasKey("Pr_Id");

                    b.HasIndex("Cat_Id1");

                    b.ToTable("sproducts");
                });

            modelBuilder.Entity("Pharm_Easy_Models.hArticle", b =>
                {
                    b.Property<int>("H_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("H_Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("H_Id");

                    b.ToTable("hArticles");
                });

            modelBuilder.Entity("Pharm_Easy_Models.login", b =>
                {
                    b.Property<int>("Mobile_Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Conform_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Create_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GST_Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Mobile_Number");

                    b.ToTable("logins");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Cart", b =>
                {
                    b.HasOne("Pharm_Easy_Models.Offers", "Off_Id")
                        .WithMany()
                        .HasForeignKey("Off_Id1");

                    b.HasOne("Pharm_Easy_Models.Order", "o_quantity")
                        .WithMany()
                        .HasForeignKey("o_quantityo_Id");

                    b.Navigation("o_quantity");

                    b.Navigation("Off_Id");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Order", b =>
                {
                    b.HasOne("Pharm_Easy_Models.Offers", "Off_Id")
                        .WithMany()
                        .HasForeignKey("Off_Id1");

                    b.HasOne("Pharm_Easy_Models.Product", "Pr_Id")
                        .WithMany()
                        .HasForeignKey("Pr_Id1");

                    b.Navigation("Off_Id");

                    b.Navigation("Pr_Id");
                });

            modelBuilder.Entity("Pharm_Easy_Models.Product", b =>
                {
                    b.HasOne("Pharm_Easy_Models.Categories", "Cat_Id")
                        .WithMany()
                        .HasForeignKey("Cat_Id1");

                    b.Navigation("Cat_Id");
                });

            modelBuilder.Entity("Pharm_Easy_Models.SProduct", b =>
                {
                    b.HasOne("Pharm_Easy_Models.Categories", "Cat_Id")
                        .WithMany()
                        .HasForeignKey("Cat_Id1");

                    b.Navigation("Cat_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
